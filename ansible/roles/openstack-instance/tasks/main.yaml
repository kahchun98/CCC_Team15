---
# Create instances on NeCTAR
- name: Create instances
  os_server:
    name: '{{ item.name }}'
    image: '{{ instance_image }}'
    key_name: '{{ instance_key_name }}'
    flavor: '{{ instance_flavor }}'
    network: '{{ network }}'
    availability_zone: '{{ availability_zone }}'
    security_groups: '{{ sg_names }}'
    volumes: '{{ item.volumes }}'
    auto_floating_ip: yes
    wait: yes
    timeout: 600
    state: present
  loop: '{{ instances }}'
  register: os_instance

- debug:
    msg: "Instance {{ item.openstack.name }} has been created. IP address is {{ item.openstack.public_v4 }}"
  loop: '{{ os_instance.results }}'
  when: item.openstack is defined

- name: Wait for connection
  wait_for:
    host: "{{ item.openstack.public_v4 }}"
    port: 22
    timeout: 120
    search_regex: OpenSSH
  loop: '{{ os_instance.results }}'
  when: item.openstack is defined

# Add hosts to Ansible in-memory inventory
- name: Add host
  add_host:
    name: '{{ item.openstack.public_v4 }}'
    groups: COMP90024
  loop: '{{ os_instance.results }}'
  when: item.openstack is defined


# collect ip
- name: Set ip fact
  set_fact:
    ip_addresses: "{{ ip_addresses|default([]) + [ {'name': item.item.name, 'ip': item.openstack.public_v4} ] }}"
  loop: '{{ os_instance.results }}'
  when: item.openstack is defined

# create hosts file
- name: create inventory file
  copy:
    content: "[COMP90024]\n"
    dest: "{{project_directory}}/hosts.ini"

- name: Add COMP90024 to inventory file
  lineinfile:
    line: "{{ item.ip }}"
    dest: "{{project_directory}}/hosts.ini"
  loop: '{{ ip_addresses }}'

- name: Add vars to inventory file
  lineinfile:
    line: "\n[COMP90024:vars]\nansible_python_interpreter=/usr/bin/python3\nansible_user=ubuntu\nansible_ssh_private_key_file=~/.ssh/ansible.pem\nansible_ssh_common_args='-o StrictHostKeyChecking=no'\n\n\n"
    dest: "{{project_directory}}/hosts.ini"

- name: create manager node group
  lineinfile:
    line: "[managernode]"
    dest: "{{project_directory}}/hosts.ini"

# save ip addresses of instances
- name: write ip addresses to manager
  lineinfile:
    line: "{{ item.ip }}\n"
    dest: "{{project_directory}}/hosts.ini"
  loop: '{{ ip_addresses }}'
  when: item.name == "manager-node"

- name: create worker node group
  lineinfile:
    line: "[workernodes]"
    dest: "{{project_directory}}/hosts.ini"

- name: write ip addresses to worker
  lineinfile:
    line: "{{ item.ip }}\n"
    dest: "{{project_directory}}/hosts.ini"
  loop: '{{ ip_addresses }}'
  when: (item.name == "slave-node-1") or (item.name == "slave-node-2")
